// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: battle_server.proto

package msg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlayerRoleType int32

const (
	PlayerRoleType_Player PlayerRoleType = 0
	PlayerRoleType_Robot  PlayerRoleType = 1
)

// Enum value maps for PlayerRoleType.
var (
	PlayerRoleType_name = map[int32]string{
		0: "Player",
		1: "Robot",
	}
	PlayerRoleType_value = map[string]int32{
		"Player": 0,
		"Robot":  1,
	}
)

func (x PlayerRoleType) Enum() *PlayerRoleType {
	p := new(PlayerRoleType)
	*p = x
	return p
}

func (x PlayerRoleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerRoleType) Descriptor() protoreflect.EnumDescriptor {
	return file_battle_server_proto_enumTypes[0].Descriptor()
}

func (PlayerRoleType) Type() protoreflect.EnumType {
	return &file_battle_server_proto_enumTypes[0]
}

func (x PlayerRoleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerRoleType.Descriptor instead.
func (PlayerRoleType) EnumDescriptor() ([]byte, []int) {
	return file_battle_server_proto_rawDescGZIP(), []int{0}
}

type EventBattleOver_OverType int32

const (
	EventBattleOver_Normal    EventBattleOver_OverType = 0
	EventBattleOver_Timeout   EventBattleOver_OverType = 1
	EventBattleOver_Disbanded EventBattleOver_OverType = 2 // 解散
)

// Enum value maps for EventBattleOver_OverType.
var (
	EventBattleOver_OverType_name = map[int32]string{
		0: "Normal",
		1: "Timeout",
		2: "Disbanded",
	}
	EventBattleOver_OverType_value = map[string]int32{
		"Normal":    0,
		"Timeout":   1,
		"Disbanded": 2,
	}
)

func (x EventBattleOver_OverType) Enum() *EventBattleOver_OverType {
	p := new(EventBattleOver_OverType)
	*p = x
	return p
}

func (x EventBattleOver_OverType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventBattleOver_OverType) Descriptor() protoreflect.EnumDescriptor {
	return file_battle_server_proto_enumTypes[1].Descriptor()
}

func (EventBattleOver_OverType) Type() protoreflect.EnumType {
	return &file_battle_server_proto_enumTypes[1]
}

func (x EventBattleOver_OverType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventBattleOver_OverType.Descriptor instead.
func (EventBattleOver_OverType) EnumDescriptor() ([]byte, []int) {
	return file_battle_server_proto_rawDescGZIP(), []int{6, 0}
}

type PlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       uint32            `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	SeatId    int32             `protobuf:"varint,2,opt,name=seat_id,json=seatId,proto3" json:"seat_id,omitempty"`
	Role      PlayerRoleType    `protobuf:"varint,3,opt,name=role,proto3,enum=battle.PlayerRoleType" json:"role,omitempty"`
	MainScore int64             `protobuf:"varint,4,opt,name=main_score,json=mainScore,proto3" json:"main_score,omitempty"`
	SubScores map[int32]int64   `protobuf:"bytes,5,rep,name=sub_scores,json=subScores,proto3" json:"sub_scores,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Extra     map[string]string `protobuf:"bytes,6,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PlayerInfo) Reset() {
	*x = PlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInfo) ProtoMessage() {}

func (x *PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_battle_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInfo.ProtoReflect.Descriptor instead.
func (*PlayerInfo) Descriptor() ([]byte, []int) {
	return file_battle_server_proto_rawDescGZIP(), []int{0}
}

func (x *PlayerInfo) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *PlayerInfo) GetSeatId() int32 {
	if x != nil {
		return x.SeatId
	}
	return 0
}

func (x *PlayerInfo) GetRole() PlayerRoleType {
	if x != nil {
		return x.Role
	}
	return PlayerRoleType_Player
}

func (x *PlayerInfo) GetMainScore() int64 {
	if x != nil {
		return x.MainScore
	}
	return 0
}

func (x *PlayerInfo) GetSubScores() map[int32]int64 {
	if x != nil {
		return x.SubScores
	}
	return nil
}

func (x *PlayerInfo) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type BattleConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxBattleTime int32 `protobuf:"varint,1,opt,name=max_battle_time,json=maxBattleTime,proto3" json:"max_battle_time,omitempty"`
}

func (x *BattleConfig) Reset() {
	*x = BattleConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleConfig) ProtoMessage() {}

func (x *BattleConfig) ProtoReflect() protoreflect.Message {
	mi := &file_battle_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleConfig.ProtoReflect.Descriptor instead.
func (*BattleConfig) Descriptor() ([]byte, []int) {
	return file_battle_server_proto_rawDescGZIP(), []int{1}
}

func (x *BattleConfig) GetMaxBattleTime() int32 {
	if x != nil {
		return x.MaxBattleTime
	}
	return 0
}

type ReqStartBattle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleConf   *BattleConfig `protobuf:"bytes,1,opt,name=battle_conf,json=battleConf,proto3" json:"battle_conf,omitempty"`
	LogicName    string        `protobuf:"bytes,2,opt,name=logic_name,json=logicName,proto3" json:"logic_name,omitempty"`
	LogicVersion string        `protobuf:"bytes,3,opt,name=logic_version,json=logicVersion,proto3" json:"logic_version,omitempty"`
	LogicConf    []byte        `protobuf:"bytes,4,opt,name=logic_conf,json=logicConf,proto3" json:"logic_conf,omitempty"`
	PlayerInfos  []*PlayerInfo `protobuf:"bytes,5,rep,name=player_infos,json=playerInfos,proto3" json:"player_infos,omitempty"`
	CallbackUrl  string        `protobuf:"bytes,6,opt,name=callback_url,json=callbackUrl,proto3" json:"callback_url,omitempty"`
}

func (x *ReqStartBattle) Reset() {
	*x = ReqStartBattle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqStartBattle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqStartBattle) ProtoMessage() {}

func (x *ReqStartBattle) ProtoReflect() protoreflect.Message {
	mi := &file_battle_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqStartBattle.ProtoReflect.Descriptor instead.
func (*ReqStartBattle) Descriptor() ([]byte, []int) {
	return file_battle_server_proto_rawDescGZIP(), []int{2}
}

func (x *ReqStartBattle) GetBattleConf() *BattleConfig {
	if x != nil {
		return x.BattleConf
	}
	return nil
}

func (x *ReqStartBattle) GetLogicName() string {
	if x != nil {
		return x.LogicName
	}
	return ""
}

func (x *ReqStartBattle) GetLogicVersion() string {
	if x != nil {
		return x.LogicVersion
	}
	return ""
}

func (x *ReqStartBattle) GetLogicConf() []byte {
	if x != nil {
		return x.LogicConf
	}
	return nil
}

func (x *ReqStartBattle) GetPlayerInfos() []*PlayerInfo {
	if x != nil {
		return x.PlayerInfos
	}
	return nil
}

func (x *ReqStartBattle) GetCallbackUrl() string {
	if x != nil {
		return x.CallbackUrl
	}
	return ""
}

type RespStartBattle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleId uint64 `protobuf:"varint,1,opt,name=battle_id,json=battleId,proto3" json:"battle_id,omitempty"`
}

func (x *RespStartBattle) Reset() {
	*x = RespStartBattle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespStartBattle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespStartBattle) ProtoMessage() {}

func (x *RespStartBattle) ProtoReflect() protoreflect.Message {
	mi := &file_battle_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespStartBattle.ProtoReflect.Descriptor instead.
func (*RespStartBattle) Descriptor() ([]byte, []int) {
	return file_battle_server_proto_rawDescGZIP(), []int{3}
}

func (x *RespStartBattle) GetBattleId() uint64 {
	if x != nil {
		return x.BattleId
	}
	return 0
}

type EventBattleStarted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Battleid uint64 `protobuf:"varint,1,opt,name=battleid,proto3" json:"battleid,omitempty"`
}

func (x *EventBattleStarted) Reset() {
	*x = EventBattleStarted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventBattleStarted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBattleStarted) ProtoMessage() {}

func (x *EventBattleStarted) ProtoReflect() protoreflect.Message {
	mi := &file_battle_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBattleStarted.ProtoReflect.Descriptor instead.
func (*EventBattleStarted) Descriptor() ([]byte, []int) {
	return file_battle_server_proto_rawDescGZIP(), []int{4}
}

func (x *EventBattleStarted) GetBattleid() uint64 {
	if x != nil {
		return x.Battleid
	}
	return 0
}

type TallyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detals []*TallyInfo_PlayerTally `protobuf:"bytes,1,rep,name=detals,proto3" json:"detals,omitempty"`
}

func (x *TallyInfo) Reset() {
	*x = TallyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TallyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TallyInfo) ProtoMessage() {}

func (x *TallyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_battle_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TallyInfo.ProtoReflect.Descriptor instead.
func (*TallyInfo) Descriptor() ([]byte, []int) {
	return file_battle_server_proto_rawDescGZIP(), []int{5}
}

func (x *TallyInfo) GetDetals() []*TallyInfo_PlayerTally {
	if x != nil {
		return x.Detals
	}
	return nil
}

type EventBattleOver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Battleid uint64                   `protobuf:"varint,1,opt,name=battleid,proto3" json:"battleid,omitempty"`
	OverType EventBattleOver_OverType `protobuf:"varint,2,opt,name=over_type,json=overType,proto3,enum=battle.EventBattleOver_OverType" json:"over_type,omitempty"`
	Tallys   *TallyInfo               `protobuf:"bytes,3,opt,name=tallys,proto3" json:"tallys,omitempty"`
}

func (x *EventBattleOver) Reset() {
	*x = EventBattleOver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventBattleOver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBattleOver) ProtoMessage() {}

func (x *EventBattleOver) ProtoReflect() protoreflect.Message {
	mi := &file_battle_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBattleOver.ProtoReflect.Descriptor instead.
func (*EventBattleOver) Descriptor() ([]byte, []int) {
	return file_battle_server_proto_rawDescGZIP(), []int{6}
}

func (x *EventBattleOver) GetBattleid() uint64 {
	if x != nil {
		return x.Battleid
	}
	return 0
}

func (x *EventBattleOver) GetOverType() EventBattleOver_OverType {
	if x != nil {
		return x.OverType
	}
	return EventBattleOver_Normal
}

func (x *EventBattleOver) GetTallys() *TallyInfo {
	if x != nil {
		return x.Tallys
	}
	return nil
}

type TallyInfo_PlayerTally struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       uint32            `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	SeatId    int32             `protobuf:"varint,2,opt,name=seat_id,json=seatId,proto3" json:"seat_id,omitempty"`
	Logdata   []byte            `protobuf:"bytes,3,opt,name=logdata,proto3" json:"logdata,omitempty"`
	MainScore int64             `protobuf:"varint,4,opt,name=main_score,json=mainScore,proto3" json:"main_score,omitempty"`
	SubScores map[int32]int64   `protobuf:"bytes,5,rep,name=sub_scores,json=subScores,proto3" json:"sub_scores,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Extra     map[string]string `protobuf:"bytes,6,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TallyInfo_PlayerTally) Reset() {
	*x = TallyInfo_PlayerTally{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_server_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TallyInfo_PlayerTally) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TallyInfo_PlayerTally) ProtoMessage() {}

func (x *TallyInfo_PlayerTally) ProtoReflect() protoreflect.Message {
	mi := &file_battle_server_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TallyInfo_PlayerTally.ProtoReflect.Descriptor instead.
func (*TallyInfo_PlayerTally) Descriptor() ([]byte, []int) {
	return file_battle_server_proto_rawDescGZIP(), []int{5, 0}
}

func (x *TallyInfo_PlayerTally) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *TallyInfo_PlayerTally) GetSeatId() int32 {
	if x != nil {
		return x.SeatId
	}
	return 0
}

func (x *TallyInfo_PlayerTally) GetLogdata() []byte {
	if x != nil {
		return x.Logdata
	}
	return nil
}

func (x *TallyInfo_PlayerTally) GetMainScore() int64 {
	if x != nil {
		return x.MainScore
	}
	return 0
}

func (x *TallyInfo_PlayerTally) GetSubScores() map[int32]int64 {
	if x != nil {
		return x.SubScores
	}
	return nil
}

func (x *TallyInfo_PlayerTally) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

var File_battle_server_proto protoreflect.FileDescriptor

var file_battle_server_proto_rawDesc = []byte{
	0x0a, 0x13, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x22, 0xf1, 0x02,
	0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x65, 0x61, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x75, 0x62, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x73, 0x75, 0x62, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x3c, 0x0a, 0x0e, 0x53, 0x75, 0x62,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x36, 0x0a, 0x0c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x84, 0x02, 0x0a, 0x0e, 0x52, 0x65,
	0x71, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x35, 0x0a, 0x0b,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x63,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x63,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6c, 0x6f, 0x67,
	0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x35, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c,
	0x22, 0x2e, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64,
	0x22, 0x30, 0x0a, 0x12, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x69, 0x64, 0x22, 0xbb, 0x03, 0x0a, 0x09, 0x54, 0x61, 0x6c, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x35, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x54, 0x61, 0x6c, 0x6c, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x61, 0x6c, 0x6c, 0x79, 0x52,
	0x06, 0x64, 0x65, 0x74, 0x61, 0x6c, 0x73, 0x1a, 0xf6, 0x02, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x54, 0x61, 0x6c, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x61,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x61, 0x74,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x4b, 0x0a, 0x0a, 0x73,
	0x75, 0x62, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x54, 0x61, 0x6c, 0x6c, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x53,
	0x75, 0x62, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x73,
	0x75, 0x62, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x2e, 0x54, 0x61, 0x6c, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x54, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x3c, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xcb, 0x01, 0x0a, 0x0f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x4f, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x69, 0x64,
	0x12, 0x3d, 0x0a, 0x09, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x2e, 0x4f, 0x76, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x29, 0x0a, 0x06, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x54, 0x61, 0x6c, 0x6c, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x06, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x73, 0x22, 0x32, 0x0a, 0x08, 0x4f, 0x76,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x44, 0x69, 0x73, 0x62, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x10, 0x02, 0x2a, 0x27,
	0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0a, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x52, 0x6f, 0x62, 0x6f, 0x74, 0x10, 0x01, 0x32, 0x4a, 0x0a, 0x06, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x12, 0x40, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x12, 0x16, 0x2e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x1a, 0x17, 0x2e, 0x62, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x22, 0x00, 0x42, 0x10, 0x5a, 0x05, 0x2e, 0x3b, 0x6d, 0x73, 0x67, 0xaa, 0x02, 0x06, 0x62,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_battle_server_proto_rawDescOnce sync.Once
	file_battle_server_proto_rawDescData = file_battle_server_proto_rawDesc
)

func file_battle_server_proto_rawDescGZIP() []byte {
	file_battle_server_proto_rawDescOnce.Do(func() {
		file_battle_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_battle_server_proto_rawDescData)
	})
	return file_battle_server_proto_rawDescData
}

var file_battle_server_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_battle_server_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_battle_server_proto_goTypes = []interface{}{
	(PlayerRoleType)(0),           // 0: battle.PlayerRoleType
	(EventBattleOver_OverType)(0), // 1: battle.EventBattleOver.OverType
	(*PlayerInfo)(nil),            // 2: battle.PlayerInfo
	(*BattleConfig)(nil),          // 3: battle.BattleConfig
	(*ReqStartBattle)(nil),        // 4: battle.ReqStartBattle
	(*RespStartBattle)(nil),       // 5: battle.RespStartBattle
	(*EventBattleStarted)(nil),    // 6: battle.EventBattleStarted
	(*TallyInfo)(nil),             // 7: battle.TallyInfo
	(*EventBattleOver)(nil),       // 8: battle.EventBattleOver
	nil,                           // 9: battle.PlayerInfo.SubScoresEntry
	nil,                           // 10: battle.PlayerInfo.ExtraEntry
	(*TallyInfo_PlayerTally)(nil), // 11: battle.TallyInfo.PlayerTally
	nil,                           // 12: battle.TallyInfo.PlayerTally.SubScoresEntry
	nil,                           // 13: battle.TallyInfo.PlayerTally.ExtraEntry
}
var file_battle_server_proto_depIdxs = []int32{
	0,  // 0: battle.PlayerInfo.role:type_name -> battle.PlayerRoleType
	9,  // 1: battle.PlayerInfo.sub_scores:type_name -> battle.PlayerInfo.SubScoresEntry
	10, // 2: battle.PlayerInfo.extra:type_name -> battle.PlayerInfo.ExtraEntry
	3,  // 3: battle.ReqStartBattle.battle_conf:type_name -> battle.BattleConfig
	2,  // 4: battle.ReqStartBattle.player_infos:type_name -> battle.PlayerInfo
	11, // 5: battle.TallyInfo.detals:type_name -> battle.TallyInfo.PlayerTally
	1,  // 6: battle.EventBattleOver.over_type:type_name -> battle.EventBattleOver.OverType
	7,  // 7: battle.EventBattleOver.tallys:type_name -> battle.TallyInfo
	12, // 8: battle.TallyInfo.PlayerTally.sub_scores:type_name -> battle.TallyInfo.PlayerTally.SubScoresEntry
	13, // 9: battle.TallyInfo.PlayerTally.extra:type_name -> battle.TallyInfo.PlayerTally.ExtraEntry
	4,  // 10: battle.Battle.StartBattle:input_type -> battle.ReqStartBattle
	5,  // 11: battle.Battle.StartBattle:output_type -> battle.RespStartBattle
	11, // [11:12] is the sub-list for method output_type
	10, // [10:11] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_battle_server_proto_init() }
func file_battle_server_proto_init() {
	if File_battle_server_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_battle_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqStartBattle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespStartBattle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventBattleStarted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TallyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventBattleOver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_server_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TallyInfo_PlayerTally); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_battle_server_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_battle_server_proto_goTypes,
		DependencyIndexes: file_battle_server_proto_depIdxs,
		EnumInfos:         file_battle_server_proto_enumTypes,
		MessageInfos:      file_battle_server_proto_msgTypes,
	}.Build()
	File_battle_server_proto = out.File
	file_battle_server_proto_rawDesc = nil
	file_battle_server_proto_goTypes = nil
	file_battle_server_proto_depIdxs = nil
}
