syntax = "proto3";

package logic.niuniu;

option go_package = ".;niuniu";

// 牌型类型
enum BullType {
  NO_POINT = 0;    // 无点牌
  ONE = 1;         // 牛一
  TWO = 2;         // 牛二
  THREE = 3;       // 牛三
  FOUR = 4;        // 牛四
  FIVE = 5;        // 牛五
  SIX = 6;         // 牛六
  SEVEN = 7;       // 牛七
  EIGHT = 8;       // 牛八
  NINE = 9;        // 牛九
  BULL = 10;       // 牛牛
  FOURBOMB = 11;   // 四炸
  FIVEFLOWER = 12; // 五花
  FIVESMALL = 13;  // 五小
}

enum GameStatus {
  IDLE = 0;          // 空闲,等待玩家准备
  COUNTDOWN = 1;     // 开始倒计时
  BEGIN = 2;         // 开始
  BANKER = 3;        // 抢庄
  BANKER_NOTIFY = 4; // 通知庄
  BET = 5;           // 下注
  DEAL_CARDS = 6;    // 发牌
  SHOW_CARDS = 7;    // 亮牌
  TALLY = 8;         // 游戏结算
  OVER = 9;          // 游戏结束
}

message OutCardInfo {
  BullType type = 1;
  bytes cards = 2; // 有牛: 前三张为组成牛牛的三张牌, 其它从大到小排序
}

message PlayerInfo {
  uint32 seat_id = 1;
  GameStatus status = 2;
  int32 ready = 3;
  int32 banker_rob = 4; // 抢庄
  bool is_banker = 5;
  int32 bet_rate = 6;   // 下注倍率
  bytes hand_cards = 7; //
  OutCardInfo out_card = 8;
}

message GameInfo {
  GameStatus status = 4; // 游戏状态
}

// 游戏全量信息
message GameInfoRequest {}

message GameInfoResponse {
  string game_conf = 1;
  GameInfo game_info = 2;
  repeated PlayerInfo player_info = 3;
}

message NotifyGameStatusChange {
  GameStatus before_status = 1; // 游戏状态
  GameStatus curr_status = 2;
  uint32 status_at = 3; // 状态开始时间戳
  int32 count_down = 4; // 倒计时
}

// 用户请求抢庄
message PlayerRobBankerReport {
  int32 rob = 2; // 1:不抢, 2: 抢
}

// 广播抢庄用户
message NotifyPlayerRobBanker {
  uint32 seat_id = 1;
  int32 rob = 2;
}

// 广播庄家位置
message NotifyBankerSeat {
  uint32 seat_id = 1;
}

// 闲家下注
message PlayerBetRateReport {
  int32 rate = 1;
}

// 广播闲家下注倍率信息
message NotifyPlayerBetRate {
  uint32 seat_id = 1;
  int32 rate = 2;
}

// 通知用户手牌信息
message NotifyPlayerHandCards {
  uint32 seat_id = 1;
  bytes hand_cards = 2;
}

// 请求上传出牌信息
message PlayerOutCardReport {
  OutCardInfo out_card = 1;
}

// 广播用户出牌结果
message NotifyPlayerOutCard {
  uint32 seat_id = 1;
  OutCardInfo out_card = 2;
}

// 游戏结算
message NotifyGameTally {
  message TallyInfo {
    uint32 seat_id = 1;
    int32 coins = 2;
  }
  repeated TallyInfo tall_info = 2; // 用户输户赢信息
}
