syntax = "proto3";

package battle;

option go_package = "/proto";

service Battle {
  // rpc StartBattle(StartBattleRequest) returns (StartBattleResponse) {}
}

message GameMessageWrap {
  string battle_id = 1;
  int64 uid = 2;
  int32 msgid = 3;
  bytes data = 4;
}

message PlayerInfo {
  int64 uid = 1;
  int32 seat_id = 2;
  int64 score = 3;
  bool is_robot = 4;
}

message CommanderConfigure {
  int32 max_game_time = 1; // second

  oneof start_condition {
    int32 delayed = 2;
    bool by_control = 3;
  }
}

message StartBattleRequest {
  string battle_name = 1;
  bytes battle_conf = 2;
  CommanderConfigure commander_conf = 3;
  repeated PlayerInfo player_infos = 4;
}

message StartBattleResponse {
  string battle_id = 1;
  string node_id = 2;
}

message StopBattleRequest {
  string battle_id = 1;
}

message StopBattleResponse {}

message WatcherJoinBattleRequest {
  string battle_id = 1;
  repeated PlayerInfo player_infos = 4;
}

message WatcherJoinBattleResponse {}

message BattleOverReport {
  enum State {
    Finished = 0;  // 完成
    Disbanded = 1; // 解散
    Timeover = 2;  // 超时
  }

  message BattleScore {
    int64 score = 1;
    map<string, string> extra = 2;
  }

  State state = 1;
  map<int32, BattleScore> tally = 2;
}

message BattleStatusChangeEvent {
  string battle_id = 1;
  int32 status_before = 2;
  int32 status_now = 3;
}

message BattleStartEvent {}

message BattleOverEvent {}
